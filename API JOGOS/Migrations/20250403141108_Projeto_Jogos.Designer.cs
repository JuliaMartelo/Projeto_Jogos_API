// <auto-generated />
using System;
using Jogos_API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jogos_API.Migrations
{
    [DbContext(typeof(Jogo_Context))]
    [Migration("20250403141108_Projeto_Jogos")]
    partial class Projeto_Jogos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Jogos_API.Domains.Jogo", b =>
                {
                    b.Property<Guid>("JogoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeDoJogo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Plataforma")
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("JogoID");

                    b.HasIndex("NomeDoJogo")
                        .IsUnique();

                    b.ToTable("Jogo");
                });

            modelBuilder.Entity("Jogos_API.Domains.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JogoID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("UsuarioID");

                    b.HasIndex("JogoID");

                    b.HasIndex("Nickname")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Jogos_API.Domains.Usuario", b =>
                {
                    b.HasOne("Jogos_API.Domains.Jogo", "jogo")
                        .WithMany()
                        .HasForeignKey("JogoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("jogo");
                });
#pragma warning restore 612, 618
        }
    }
}
